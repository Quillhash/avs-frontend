"use client"
import { CSSProperties, useState } from "react"
import {
  IconAlertTriangleFilled,
  IconCaretDownFilled,
  IconCaretRightFilled,
} from "@tabler/icons-react"
import SyntaxHighlighter from "react-syntax-highlighter"
import { nightOwl } from "react-syntax-highlighter/dist/esm/styles/hljs"
import { cn } from "@nextui-org/react"

export const SeverityColors = {
  high: "#FF4D4D",
  medium: "#FFD166",
  low: "#06D6A0",
  informational: "#E568FF",
  optimization: "#66E3F4",
}

export const SeverityBGColors = {
  high: "bg-[#FF4D4D14]",
  medium: "bg-[#FFD16614]",
  low: "bg-[#06D6A014]",
  informational: "bg-[#E568FF14]",
  optimization: "bg-[#66E3F414]",
}

type VulnerabilityProps = {
  item: {
    name?: string
    severity?: string
    snippet?: string
    lineNumbers?: number[]
    description?: string
    autoFixEnabled?: boolean
    confidence?: string
    recommendation?: string
    explanation?: string
    file?: string
    exists?: string
    cost?: string
    fingerprint?: string
  }
  showCode: boolean
}

export const VulnerabilityCard = ({ item, showCode }: VulnerabilityProps) => {
  const [isOpen, setIsOpen] = useState(false)

  return (
    <>
      <li
        className="flex flex-col justify-start gap-2 text-sm"
        style={
          {
            "--border-color": "#2D2F66",
          } as CSSProperties
        }
      >
        <div
          className="flex cursor-pointer flex-row items-center gap-1"
          onClick={() => showCode && setIsOpen((prev) => !prev)}
        >
          {showCode &&
            (isOpen ? (
              <IconCaretDownFilled size={"16"} className="text-primary" />
            ) : (
              <IconCaretRightFilled size={"16"} />
            ))}

          <div
            className={cn(
              "flex w-full flex-row items-center justify-start gap-2 rounded-md px-2 py-1 text-sm",
              `hover:${SeverityBGColors[item?.severity as keyof typeof SeverityColors]}`,
              {
                [SeverityBGColors[
                  item?.severity as keyof typeof SeverityColors
                ]]: isOpen,
              }
            )}
          >
            <IconAlertTriangleFilled
              color={
                SeverityColors[item?.severity as keyof typeof SeverityColors]
              }
              size={"16"}
            />
            <span className="w-full">{item?.name}</span>
          </div>
        </div>

        {showCode && isOpen && (
          <li
            className="!mt-0 ml-10 space-y-4 rounded-lg bg-primary-foreground/5 p-4"
            style={
              {
                "--border-color": `${SeverityColors[item?.severity as keyof typeof SeverityColors]}60`,
              } as CSSProperties
            }
          >
            <div className="flex flex-col gap-2">
              <span className="text-primary">Issue Description:</span>
              <span>{item?.explanation}</span>
            </div>

            <div className="flex flex-col gap-2">
              <span className="text-primary">Remediation:</span>
              <span>{item?.recommendation}</span>
            </div>

            <div className="flex flex-col gap-2">
              <span className="text-primary">File:</span>
              <span>{item?.file}</span>
            </div>

            <div className="flex flex-col gap-2">
              <span className="text-primary">Code Snippet:</span>
              <span className="w-full rounded-md bg-[#13161A] p-3">
                <SyntaxHighlighter
                  language="solidity"
                  style={nightOwl}
                  showLineNumbers
                  startingLineNumber={item?.lineNumbers?.[0]}
                  customStyle={{
                    backgroundColor: "transparent",
                    padding: "0",
                  }}
                  lineNumberStyle={{
                    borderRight: "1px solid #5D677D",
                    marginRight: "14px",
                    color: "#5D677D",
                  }}
                >
                  {item?.snippet || ""}
                </SyntaxHighlighter>
              </span>
            </div>
          </li>
        )}
      </li>
    </>
  )
}
